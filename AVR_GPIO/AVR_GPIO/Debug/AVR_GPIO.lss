
AVR_GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .data         00000004  00800100  00000858  000008ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000858  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000009c  00800104  00800104  000008f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000de7  00000000  00000000  00000a04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb9  00000000  00000000  000017eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000591  00000000  00000000  000023a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000114  00000000  00000000  00002938  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000057d  00000000  00000000  00002a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000288  00000000  00000000  00002fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003251  2**0
=======
  0 .data         00000000  00800100  00800100  000005b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000053c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800100  00800100  000005b0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c5e  00000000  00000000  000006a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a31  00000000  00000000  00001306  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000519  00000000  00000000  00001d37  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00002250  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ae  00000000  00000000  000023c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000256  00000000  00000000  00002976  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00002bcc  2**0
>>>>>>> parent of a64aea3... split the files and implement 4 sensors model
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
<<<<<<< HEAD
   4:	0c 94 b1 00 	jmp	0x162	; 0x162 <__vector_1>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  38:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_14>
  3c:	0c 94 84 00 	jmp	0x108	; 0x108 <__vector_15>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
=======
   4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
   c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  10:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  14:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  18:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  1c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  20:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  24:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__vector_10>
  2c:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__vector_11>
  30:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  34:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  38:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  3c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  40:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  44:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  48:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  4c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  50:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  54:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  58:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  5c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  60:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  64:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  68:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  6c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  70:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  74:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  78:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  7c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  80:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  84:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  88:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  8c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  90:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  94:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  98:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  9c:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a4:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  a8:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  ac:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
  b0:	0c 94 6c 00 	jmp	0xd8	; 0xd8 <__bad_interrupt>
>>>>>>> parent of a64aea3... split the files and implement 4 sensors model

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 e5       	ldi	r30, 0x58	; 88
  c8:	f8 e0       	ldi	r31, 0x08	; 8
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 30       	cpi	r26, 0x04	; 4
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e0       	ldi	r26, 0x04	; 4
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

<<<<<<< HEAD
000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1
=======
000000ca <.do_clear_bss_start>:
  ca:	ac 30       	cpi	r26, 0x0C	; 12
  cc:	b2 07       	cpc	r27, r18
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0e 94 2c 01 	call	0x258	; 0x258 <main>
  d4:	0c 94 9c 02 	jmp	0x538	; 0x538 <_exit>
>>>>>>> parent of a64aea3... split the files and implement 4 sensors model

000000e0 <.do_clear_bss_start>:
  e0:	a0 3a       	cpi	r26, 0xA0	; 160
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 ee 00 	call	0x1dc	; 0x1dc <main>
  ea:	0c 94 2a 04 	jmp	0x854	; 0x854 <_exit>

<<<<<<< HEAD
000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <__vector_14>:
unsigned char USART_Receive(){
	/* Wait for data to be received */
	while (!(UCSR0A & (1<<RXC0)));
	/* Get and return received data from buffer */
	return UDR0;
}
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	40 9a       	sbi	0x08, 0	; 8
  fe:	0f 90       	pop	r0
 100:	0f be       	out	0x3f, r0	; 63
 102:	0f 90       	pop	r0
 104:	1f 90       	pop	r1
 106:	18 95       	reti

00000108 <__vector_15>:
 108:	1f 92       	push	r1
 10a:	0f 92       	push	r0
 10c:	0f b6       	in	r0, 0x3f	; 63
 10e:	0f 92       	push	r0
 110:	11 24       	eor	r1, r1
 112:	40 98       	cbi	0x08, 0	; 8
 114:	0f 90       	pop	r0
 116:	0f be       	out	0x3f, r0	; 63
 118:	0f 90       	pop	r0
 11a:	1f 90       	pop	r1
 11c:	18 95       	reti

0000011e <USART_Init>:
 11e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 122:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 126:	88 e1       	ldi	r24, 0x18	; 24
 128:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 12c:	86 e0       	ldi	r24, 0x06	; 6
 12e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 132:	08 95       	ret

00000134 <USART_Transmit>:
void USART_Transmit(unsigned char data){
	/* Wait for empty transmit buffer */
	while (!(UCSR0A & (1<<UDRE0)));
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	90 81       	ld	r25, Z
 13a:	95 ff       	sbrs	r25, 5
 13c:	fd cf       	rjmp	.-6      	; 0x138 <USART_Transmit+0x4>
	/* Put data into buffer, sends the data */
	UDR0 = data;
 13e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 142:	08 95       	ret

00000144 <USART_putstring>:
}
void USART_putstring(char* strptr){
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	ec 01       	movw	r28, r24
	while (*strptr != 0x00){
 14a:	88 81       	ld	r24, Y
 14c:	88 23       	and	r24, r24
 14e:	31 f0       	breq	.+12     	; 0x15c <USART_putstring+0x18>
 150:	21 96       	adiw	r28, 0x01	; 1
		USART_Transmit(*strptr);
 152:	0e 94 9a 00 	call	0x134	; 0x134 <USART_Transmit>
	while (!(UCSR0A & (1<<UDRE0)));
	/* Put data into buffer, sends the data */
	UDR0 = data;
}
void USART_putstring(char* strptr){
	while (*strptr != 0x00){
 156:	89 91       	ld	r24, Y+
 158:	81 11       	cpse	r24, r1
 15a:	fb cf       	rjmp	.-10     	; 0x152 <USART_putstring+0xe>
		USART_Transmit(*strptr);
		strptr++;
	}
}
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	08 95       	ret

00000162 <__vector_1>:

ISR(INT0_vect){
 162:	1f 92       	push	r1
 164:	0f 92       	push	r0
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	0f 92       	push	r0
 16a:	11 24       	eor	r1, r1
 16c:	8f 93       	push	r24
 16e:	9f 93       	push	r25
 170:	af 93       	push	r26
 172:	bf 93       	push	r27
 174:	ef 93       	push	r30
 176:	ff 93       	push	r31
	//LED_TOGGLE;
	if (sensors[0].flag == 1){
 178:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
 17c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	81 f4       	brne	.+32     	; 0x1a4 <__vector_1+0x42>
		TCCR1B = 0;
 184:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
		sensors[0].pulse = TCNT1;
 188:	a4 e8       	ldi	r26, 0x84	; 132
 18a:	b0 e0       	ldi	r27, 0x00	; 0
 18c:	8d 91       	ld	r24, X+
 18e:	9c 91       	ld	r25, X
 190:	11 97       	sbiw	r26, 0x01	; 1
 192:	e4 e0       	ldi	r30, 0x04	; 4
 194:	f1 e0       	ldi	r31, 0x01	; 1
 196:	91 83       	std	Z+1, r25	; 0x01
 198:	80 83       	st	Z, r24
		TCNT1 = 0;
 19a:	11 96       	adiw	r26, 0x01	; 1
 19c:	1c 92       	st	X, r1
 19e:	1e 92       	st	-X, r1
		sensors[0].flag = 0;
 1a0:	13 82       	std	Z+3, r1	; 0x03
 1a2:	12 82       	std	Z+2, r1	; 0x02
	}
	if (sensors[0].flag == 0){
 1a4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end+0x2>
 1a8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x3>
 1ac:	89 2b       	or	r24, r25
 1ae:	59 f4       	brne	.+22     	; 0x1c6 <__vector_1+0x64>
		TCCR1B |= (1<<CS10);
 1b0:	e1 e8       	ldi	r30, 0x81	; 129
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	80 81       	ld	r24, Z
 1b6:	81 60       	ori	r24, 0x01	; 1
 1b8:	80 83       	st	Z, r24
		sensors[0].flag = 1;
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x3>
 1c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end+0x2>
	}
}
 1c6:	ff 91       	pop	r31
 1c8:	ef 91       	pop	r30
 1ca:	bf 91       	pop	r27
 1cc:	af 91       	pop	r26
 1ce:	9f 91       	pop	r25
 1d0:	8f 91       	pop	r24
 1d2:	0f 90       	pop	r0
 1d4:	0f be       	out	0x3f, r0	; 63
 1d6:	0f 90       	pop	r0
 1d8:	1f 90       	pop	r1
 1da:	18 95       	reti

000001dc <main>:

int main(void){
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	cd b7       	in	r28, 0x3d	; 61
 1e2:	de b7       	in	r29, 0x3e	; 62
 1e4:	c4 56       	subi	r28, 0x64	; 100
 1e6:	d1 09       	sbc	r29, r1
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	f8 94       	cli
 1ec:	de bf       	out	0x3e, r29	; 62
 1ee:	0f be       	out	0x3f, r0	; 63
 1f0:	cd bf       	out	0x3d, r28	; 61
	Sensor_Init();
 1f2:	0e 94 22 01 	call	0x244	; 0x244 <Sensor_Init>
	USART_Init(MYUBBR);
 1f6:	87 e6       	ldi	r24, 0x67	; 103
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 8f 00 	call	0x11e	; 0x11e <USART_Init>
	char s[100];
	int i = 500;
	sprintf(s, "%d", i);
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	8f 93       	push	r24
 202:	84 ef       	ldi	r24, 0xF4	; 244
 204:	8f 93       	push	r24
 206:	80 e0       	ldi	r24, 0x00	; 0
 208:	91 e0       	ldi	r25, 0x01	; 1
 20a:	9f 93       	push	r25
 20c:	8f 93       	push	r24
 20e:	8e 01       	movw	r16, r28
 210:	0f 5f       	subi	r16, 0xFF	; 255
 212:	1f 4f       	sbci	r17, 0xFF	; 255
 214:	1f 93       	push	r17
 216:	0f 93       	push	r16
 218:	0e 94 40 01 	call	0x280	; 0x280 <sprintf>
	USART_putstring(s);
 21c:	c8 01       	movw	r24, r16
 21e:	0e 94 a2 00 	call	0x144	; 0x144 <USART_putstring>

    //PWM_Init_8();
	sei();
 222:	78 94       	sei
 224:	0f 90       	pop	r0
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0

		/*for (idx = 0; idx < NUM_SENSOR; idx++){
		
		
		}*/
		cur = sensors[0].pulse/58;
 230:	e4 e0       	ldi	r30, 0x04	; 4
 232:	f1 e0       	ldi	r31, 0x01	; 1
	//DDRC |= (1<<DDC0);
	int prev = 0, cur = 0;
    while (1){
		int idx;
		// Trig Signal
		PORTB |= (1<<PINB3); 
 234:	2b 9a       	sbi	0x05, 3	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 236:	85 e0       	ldi	r24, 0x05	; 5
 238:	8a 95       	dec	r24
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x5c>
		_delay_us(15); 
		PORTB &= ~(1<<PINB3);
 23c:	2b 98       	cbi	0x05, 3	; 5

		/*for (idx = 0; idx < NUM_SENSOR; idx++){
		
		
		}*/
		cur = sensors[0].pulse/58;
 23e:	80 81       	ld	r24, Z
 240:	91 81       	ldd	r25, Z+1	; 0x01
 242:	f8 cf       	rjmp	.-16     	; 0x234 <main+0x58>

00000244 <Sensor_Init>:

void Sensor_Init(){
	//input(0), output(1), others: Don't care
	int idx;
	// Trig Pin Setup: PB3
	DDRB |= (1<<DDB3);
 244:	23 9a       	sbi	0x04, 3	; 4
	
	// Echo Pin Setup: PD2(EXTINT0), PD3(EXTINT1), PB5(PCINT0), PE0(PCINT3) 
	DDRD &= ~(1<<DDD2); 
 246:	52 98       	cbi	0x0a, 2	; 10
	//DDRD &= ~(1<<DDD3);
	//DDRB &= ~(1<<DDB4);

	// Turn on the pull-up
	PORTD |= (1<<PORTD2)/* | (1<<PORTD3)*/;
 248:	5a 9a       	sbi	0x0b, 2	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	83 ed       	ldi	r24, 0xD3	; 211
 24c:	90 e3       	ldi	r25, 0x30	; 48
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <Sensor_Init+0xa>
 252:	00 c0       	rjmp	.+0      	; 0x254 <Sensor_Init+0x10>
 254:	00 00       	nop
	//PORTB |= (1<<PORTB4);

	_delay_ms(50);

	// Enable the Interrupt
	EICRA |= (1<<ISC00) /*| (1<<ISC10)*/; // Set INT0 & INT1 to trigger on ANY logic change
 256:	e9 e6       	ldi	r30, 0x69	; 105
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	81 60       	ori	r24, 0x01	; 1
 25e:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0)/* | (1<<INT1)*/;  // Turns on INT0 & INT1
 260:	e8 9a       	sbi	0x1d, 0	; 29
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 262:	e2 e5       	ldi	r30, 0x52	; 82
 264:	f1 e0       	ldi	r31, 0x01	; 1
 266:	11 82       	std	Z+1, r1	; 0x01
 268:	10 82       	st	Z, r1
		sensors[idx].flag = 0;
 26a:	13 82       	std	Z+3, r1	; 0x03
 26c:	12 82       	std	Z+2, r1	; 0x02
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 26e:	13 8e       	std	Z+27, r1	; 0x1b
 270:	12 8e       	std	Z+26, r1	; 0x1a
		sensors[idx].flag = 0;
 272:	15 8e       	std	Z+29, r1	; 0x1d
 274:	14 8e       	std	Z+28, r1	; 0x1c
	
	//PCICR |= (1<<PCIE0); 
	//PCMSK0 |= (1<<PCINT4);	

	for (idx = 0; idx < NUM_SENSOR; idx++){
		sensors[idx].pulse = 0;
 276:	15 aa       	std	Z+53, r1	; 0x35
 278:	14 aa       	std	Z+52, r1	; 0x34
		sensors[idx].flag = 0;
 27a:	17 aa       	std	Z+55, r1	; 0x37
 27c:	16 aa       	std	Z+54, r1	; 0x36
 27e:	08 95       	ret

00000280 <sprintf>:
 280:	ae e0       	ldi	r26, 0x0E	; 14
 282:	b0 e0       	ldi	r27, 0x00	; 0
 284:	e6 e4       	ldi	r30, 0x46	; 70
 286:	f1 e0       	ldi	r31, 0x01	; 1
 288:	0c 94 01 04 	jmp	0x802	; 0x802 <__prologue_saves__+0x1c>
 28c:	0d 89       	ldd	r16, Y+21	; 0x15
 28e:	1e 89       	ldd	r17, Y+22	; 0x16
 290:	86 e0       	ldi	r24, 0x06	; 6
 292:	8c 83       	std	Y+4, r24	; 0x04
 294:	1a 83       	std	Y+2, r17	; 0x02
 296:	09 83       	std	Y+1, r16	; 0x01
 298:	8f ef       	ldi	r24, 0xFF	; 255
 29a:	9f e7       	ldi	r25, 0x7F	; 127
 29c:	9e 83       	std	Y+6, r25	; 0x06
 29e:	8d 83       	std	Y+5, r24	; 0x05
 2a0:	ae 01       	movw	r20, r28
 2a2:	47 5e       	subi	r20, 0xE7	; 231
 2a4:	5f 4f       	sbci	r21, 0xFF	; 255
 2a6:	6f 89       	ldd	r22, Y+23	; 0x17
 2a8:	78 8d       	ldd	r23, Y+24	; 0x18
 2aa:	ce 01       	movw	r24, r28
 2ac:	01 96       	adiw	r24, 0x01	; 1
 2ae:	0e 94 62 01 	call	0x2c4	; 0x2c4 <vfprintf>
 2b2:	ef 81       	ldd	r30, Y+7	; 0x07
 2b4:	f8 85       	ldd	r31, Y+8	; 0x08
 2b6:	e0 0f       	add	r30, r16
 2b8:	f1 1f       	adc	r31, r17
 2ba:	10 82       	st	Z, r1
 2bc:	2e 96       	adiw	r28, 0x0e	; 14
 2be:	e4 e0       	ldi	r30, 0x04	; 4
 2c0:	0c 94 1d 04 	jmp	0x83a	; 0x83a <__epilogue_restores__+0x1c>

000002c4 <vfprintf>:
 2c4:	ab e0       	ldi	r26, 0x0B	; 11
 2c6:	b0 e0       	ldi	r27, 0x00	; 0
 2c8:	e8 e6       	ldi	r30, 0x68	; 104
 2ca:	f1 e0       	ldi	r31, 0x01	; 1
 2cc:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__prologue_saves__>
 2d0:	6c 01       	movw	r12, r24
 2d2:	7b 01       	movw	r14, r22
 2d4:	8a 01       	movw	r16, r20
 2d6:	fc 01       	movw	r30, r24
 2d8:	17 82       	std	Z+7, r1	; 0x07
 2da:	16 82       	std	Z+6, r1	; 0x06
 2dc:	83 81       	ldd	r24, Z+3	; 0x03
 2de:	81 ff       	sbrs	r24, 1
 2e0:	cc c1       	rjmp	.+920    	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 2e2:	ce 01       	movw	r24, r28
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	3c 01       	movw	r6, r24
 2e8:	f6 01       	movw	r30, r12
 2ea:	93 81       	ldd	r25, Z+3	; 0x03
 2ec:	f7 01       	movw	r30, r14
 2ee:	93 fd       	sbrc	r25, 3
 2f0:	85 91       	lpm	r24, Z+
 2f2:	93 ff       	sbrs	r25, 3
 2f4:	81 91       	ld	r24, Z+
 2f6:	7f 01       	movw	r14, r30
 2f8:	88 23       	and	r24, r24
 2fa:	09 f4       	brne	.+2      	; 0x2fe <vfprintf+0x3a>
 2fc:	ba c1       	rjmp	.+884    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 2fe:	85 32       	cpi	r24, 0x25	; 37
 300:	39 f4       	brne	.+14     	; 0x310 <vfprintf+0x4c>
 302:	93 fd       	sbrc	r25, 3
 304:	85 91       	lpm	r24, Z+
 306:	93 ff       	sbrs	r25, 3
 308:	81 91       	ld	r24, Z+
 30a:	7f 01       	movw	r14, r30
 30c:	85 32       	cpi	r24, 0x25	; 37
 30e:	29 f4       	brne	.+10     	; 0x31a <vfprintf+0x56>
 310:	b6 01       	movw	r22, r12
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 318:	e7 cf       	rjmp	.-50     	; 0x2e8 <vfprintf+0x24>
 31a:	91 2c       	mov	r9, r1
 31c:	21 2c       	mov	r2, r1
 31e:	31 2c       	mov	r3, r1
 320:	ff e1       	ldi	r31, 0x1F	; 31
 322:	f3 15       	cp	r31, r3
 324:	d8 f0       	brcs	.+54     	; 0x35c <vfprintf+0x98>
 326:	8b 32       	cpi	r24, 0x2B	; 43
 328:	79 f0       	breq	.+30     	; 0x348 <vfprintf+0x84>
 32a:	38 f4       	brcc	.+14     	; 0x33a <vfprintf+0x76>
 32c:	80 32       	cpi	r24, 0x20	; 32
 32e:	79 f0       	breq	.+30     	; 0x34e <vfprintf+0x8a>
 330:	83 32       	cpi	r24, 0x23	; 35
 332:	a1 f4       	brne	.+40     	; 0x35c <vfprintf+0x98>
 334:	23 2d       	mov	r18, r3
 336:	20 61       	ori	r18, 0x10	; 16
 338:	1d c0       	rjmp	.+58     	; 0x374 <vfprintf+0xb0>
 33a:	8d 32       	cpi	r24, 0x2D	; 45
 33c:	61 f0       	breq	.+24     	; 0x356 <vfprintf+0x92>
 33e:	80 33       	cpi	r24, 0x30	; 48
 340:	69 f4       	brne	.+26     	; 0x35c <vfprintf+0x98>
 342:	23 2d       	mov	r18, r3
 344:	21 60       	ori	r18, 0x01	; 1
 346:	16 c0       	rjmp	.+44     	; 0x374 <vfprintf+0xb0>
 348:	83 2d       	mov	r24, r3
 34a:	82 60       	ori	r24, 0x02	; 2
 34c:	38 2e       	mov	r3, r24
 34e:	e3 2d       	mov	r30, r3
 350:	e4 60       	ori	r30, 0x04	; 4
 352:	3e 2e       	mov	r3, r30
 354:	2a c0       	rjmp	.+84     	; 0x3aa <vfprintf+0xe6>
 356:	f3 2d       	mov	r31, r3
 358:	f8 60       	ori	r31, 0x08	; 8
 35a:	1d c0       	rjmp	.+58     	; 0x396 <vfprintf+0xd2>
 35c:	37 fc       	sbrc	r3, 7
 35e:	2d c0       	rjmp	.+90     	; 0x3ba <vfprintf+0xf6>
 360:	20 ed       	ldi	r18, 0xD0	; 208
 362:	28 0f       	add	r18, r24
 364:	2a 30       	cpi	r18, 0x0A	; 10
 366:	40 f0       	brcs	.+16     	; 0x378 <vfprintf+0xb4>
 368:	8e 32       	cpi	r24, 0x2E	; 46
 36a:	b9 f4       	brne	.+46     	; 0x39a <vfprintf+0xd6>
 36c:	36 fc       	sbrc	r3, 6
 36e:	81 c1       	rjmp	.+770    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 370:	23 2d       	mov	r18, r3
 372:	20 64       	ori	r18, 0x40	; 64
 374:	32 2e       	mov	r3, r18
 376:	19 c0       	rjmp	.+50     	; 0x3aa <vfprintf+0xe6>
 378:	36 fe       	sbrs	r3, 6
 37a:	06 c0       	rjmp	.+12     	; 0x388 <vfprintf+0xc4>
 37c:	8a e0       	ldi	r24, 0x0A	; 10
 37e:	98 9e       	mul	r9, r24
 380:	20 0d       	add	r18, r0
 382:	11 24       	eor	r1, r1
 384:	92 2e       	mov	r9, r18
 386:	11 c0       	rjmp	.+34     	; 0x3aa <vfprintf+0xe6>
 388:	ea e0       	ldi	r30, 0x0A	; 10
 38a:	2e 9e       	mul	r2, r30
 38c:	20 0d       	add	r18, r0
 38e:	11 24       	eor	r1, r1
 390:	22 2e       	mov	r2, r18
 392:	f3 2d       	mov	r31, r3
 394:	f0 62       	ori	r31, 0x20	; 32
 396:	3f 2e       	mov	r3, r31
 398:	08 c0       	rjmp	.+16     	; 0x3aa <vfprintf+0xe6>
 39a:	8c 36       	cpi	r24, 0x6C	; 108
 39c:	21 f4       	brne	.+8      	; 0x3a6 <vfprintf+0xe2>
 39e:	83 2d       	mov	r24, r3
 3a0:	80 68       	ori	r24, 0x80	; 128
 3a2:	38 2e       	mov	r3, r24
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <vfprintf+0xe6>
 3a6:	88 36       	cpi	r24, 0x68	; 104
 3a8:	41 f4       	brne	.+16     	; 0x3ba <vfprintf+0xf6>
 3aa:	f7 01       	movw	r30, r14
 3ac:	93 fd       	sbrc	r25, 3
 3ae:	85 91       	lpm	r24, Z+
 3b0:	93 ff       	sbrs	r25, 3
 3b2:	81 91       	ld	r24, Z+
 3b4:	7f 01       	movw	r14, r30
 3b6:	81 11       	cpse	r24, r1
 3b8:	b3 cf       	rjmp	.-154    	; 0x320 <vfprintf+0x5c>
 3ba:	98 2f       	mov	r25, r24
 3bc:	9f 7d       	andi	r25, 0xDF	; 223
 3be:	95 54       	subi	r25, 0x45	; 69
 3c0:	93 30       	cpi	r25, 0x03	; 3
 3c2:	28 f4       	brcc	.+10     	; 0x3ce <vfprintf+0x10a>
 3c4:	0c 5f       	subi	r16, 0xFC	; 252
 3c6:	1f 4f       	sbci	r17, 0xFF	; 255
 3c8:	9f e3       	ldi	r25, 0x3F	; 63
 3ca:	99 83       	std	Y+1, r25	; 0x01
 3cc:	0d c0       	rjmp	.+26     	; 0x3e8 <vfprintf+0x124>
 3ce:	83 36       	cpi	r24, 0x63	; 99
 3d0:	31 f0       	breq	.+12     	; 0x3de <vfprintf+0x11a>
 3d2:	83 37       	cpi	r24, 0x73	; 115
 3d4:	71 f0       	breq	.+28     	; 0x3f2 <vfprintf+0x12e>
 3d6:	83 35       	cpi	r24, 0x53	; 83
 3d8:	09 f0       	breq	.+2      	; 0x3dc <vfprintf+0x118>
 3da:	59 c0       	rjmp	.+178    	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 3dc:	21 c0       	rjmp	.+66     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 3de:	f8 01       	movw	r30, r16
 3e0:	80 81       	ld	r24, Z
 3e2:	89 83       	std	Y+1, r24	; 0x01
 3e4:	0e 5f       	subi	r16, 0xFE	; 254
 3e6:	1f 4f       	sbci	r17, 0xFF	; 255
 3e8:	88 24       	eor	r8, r8
 3ea:	83 94       	inc	r8
 3ec:	91 2c       	mov	r9, r1
 3ee:	53 01       	movw	r10, r6
 3f0:	13 c0       	rjmp	.+38     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3f2:	28 01       	movw	r4, r16
 3f4:	f2 e0       	ldi	r31, 0x02	; 2
 3f6:	4f 0e       	add	r4, r31
 3f8:	51 1c       	adc	r5, r1
 3fa:	f8 01       	movw	r30, r16
 3fc:	a0 80       	ld	r10, Z
 3fe:	b1 80       	ldd	r11, Z+1	; 0x01
 400:	36 fe       	sbrs	r3, 6
 402:	03 c0       	rjmp	.+6      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 404:	69 2d       	mov	r22, r9
 406:	70 e0       	ldi	r23, 0x00	; 0
 408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40a:	6f ef       	ldi	r22, 0xFF	; 255
 40c:	7f ef       	ldi	r23, 0xFF	; 255
 40e:	c5 01       	movw	r24, r10
 410:	0e 94 4e 03 	call	0x69c	; 0x69c <strnlen>
 414:	4c 01       	movw	r8, r24
 416:	82 01       	movw	r16, r4
 418:	f3 2d       	mov	r31, r3
 41a:	ff 77       	andi	r31, 0x7F	; 127
 41c:	3f 2e       	mov	r3, r31
 41e:	16 c0       	rjmp	.+44     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 420:	28 01       	movw	r4, r16
 422:	22 e0       	ldi	r18, 0x02	; 2
 424:	42 0e       	add	r4, r18
 426:	51 1c       	adc	r5, r1
 428:	f8 01       	movw	r30, r16
 42a:	a0 80       	ld	r10, Z
 42c:	b1 80       	ldd	r11, Z+1	; 0x01
 42e:	36 fe       	sbrs	r3, 6
 430:	03 c0       	rjmp	.+6      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 432:	69 2d       	mov	r22, r9
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	02 c0       	rjmp	.+4      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 438:	6f ef       	ldi	r22, 0xFF	; 255
 43a:	7f ef       	ldi	r23, 0xFF	; 255
 43c:	c5 01       	movw	r24, r10
 43e:	0e 94 43 03 	call	0x686	; 0x686 <strnlen_P>
 442:	4c 01       	movw	r8, r24
 444:	f3 2d       	mov	r31, r3
 446:	f0 68       	ori	r31, 0x80	; 128
 448:	3f 2e       	mov	r3, r31
 44a:	82 01       	movw	r16, r4
 44c:	33 fc       	sbrc	r3, 3
 44e:	1b c0       	rjmp	.+54     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 450:	82 2d       	mov	r24, r2
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	88 16       	cp	r8, r24
 456:	99 06       	cpc	r9, r25
 458:	b0 f4       	brcc	.+44     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 45a:	b6 01       	movw	r22, r12
 45c:	80 e2       	ldi	r24, 0x20	; 32
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 464:	2a 94       	dec	r2
 466:	f4 cf       	rjmp	.-24     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 468:	f5 01       	movw	r30, r10
 46a:	37 fc       	sbrc	r3, 7
 46c:	85 91       	lpm	r24, Z+
 46e:	37 fe       	sbrs	r3, 7
 470:	81 91       	ld	r24, Z+
 472:	5f 01       	movw	r10, r30
 474:	b6 01       	movw	r22, r12
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 47c:	21 10       	cpse	r2, r1
 47e:	2a 94       	dec	r2
 480:	21 e0       	ldi	r18, 0x01	; 1
 482:	82 1a       	sub	r8, r18
 484:	91 08       	sbc	r9, r1
 486:	81 14       	cp	r8, r1
 488:	91 04       	cpc	r9, r1
 48a:	71 f7       	brne	.-36     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 48c:	e8 c0       	rjmp	.+464    	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 48e:	84 36       	cpi	r24, 0x64	; 100
 490:	11 f0       	breq	.+4      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 492:	89 36       	cpi	r24, 0x69	; 105
 494:	41 f5       	brne	.+80     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 496:	f8 01       	movw	r30, r16
 498:	37 fe       	sbrs	r3, 7
 49a:	07 c0       	rjmp	.+14     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 49c:	60 81       	ld	r22, Z
 49e:	71 81       	ldd	r23, Z+1	; 0x01
 4a0:	82 81       	ldd	r24, Z+2	; 0x02
 4a2:	93 81       	ldd	r25, Z+3	; 0x03
 4a4:	0c 5f       	subi	r16, 0xFC	; 252
 4a6:	1f 4f       	sbci	r17, 0xFF	; 255
 4a8:	08 c0       	rjmp	.+16     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4aa:	60 81       	ld	r22, Z
 4ac:	71 81       	ldd	r23, Z+1	; 0x01
 4ae:	07 2e       	mov	r0, r23
 4b0:	00 0c       	add	r0, r0
 4b2:	88 0b       	sbc	r24, r24
 4b4:	99 0b       	sbc	r25, r25
 4b6:	0e 5f       	subi	r16, 0xFE	; 254
 4b8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ba:	f3 2d       	mov	r31, r3
 4bc:	ff 76       	andi	r31, 0x6F	; 111
 4be:	3f 2e       	mov	r3, r31
 4c0:	97 ff       	sbrs	r25, 7
 4c2:	09 c0       	rjmp	.+18     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4c4:	90 95       	com	r25
 4c6:	80 95       	com	r24
 4c8:	70 95       	com	r23
 4ca:	61 95       	neg	r22
 4cc:	7f 4f       	sbci	r23, 0xFF	; 255
 4ce:	8f 4f       	sbci	r24, 0xFF	; 255
 4d0:	9f 4f       	sbci	r25, 0xFF	; 255
 4d2:	f0 68       	ori	r31, 0x80	; 128
 4d4:	3f 2e       	mov	r3, r31
 4d6:	2a e0       	ldi	r18, 0x0A	; 10
 4d8:	30 e0       	ldi	r19, 0x00	; 0
 4da:	a3 01       	movw	r20, r6
 4dc:	0e 94 95 03 	call	0x72a	; 0x72a <__ultoa_invert>
 4e0:	88 2e       	mov	r8, r24
 4e2:	86 18       	sub	r8, r6
 4e4:	45 c0       	rjmp	.+138    	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 4e6:	85 37       	cpi	r24, 0x75	; 117
 4e8:	31 f4       	brne	.+12     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4ea:	23 2d       	mov	r18, r3
 4ec:	2f 7e       	andi	r18, 0xEF	; 239
 4ee:	b2 2e       	mov	r11, r18
 4f0:	2a e0       	ldi	r18, 0x0A	; 10
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	25 c0       	rjmp	.+74     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 4f6:	93 2d       	mov	r25, r3
 4f8:	99 7f       	andi	r25, 0xF9	; 249
 4fa:	b9 2e       	mov	r11, r25
 4fc:	8f 36       	cpi	r24, 0x6F	; 111
 4fe:	c1 f0       	breq	.+48     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 500:	18 f4       	brcc	.+6      	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 502:	88 35       	cpi	r24, 0x58	; 88
 504:	79 f0       	breq	.+30     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 506:	b5 c0       	rjmp	.+362    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 508:	80 37       	cpi	r24, 0x70	; 112
 50a:	19 f0       	breq	.+6      	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 50c:	88 37       	cpi	r24, 0x78	; 120
 50e:	21 f0       	breq	.+8      	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 510:	b0 c0       	rjmp	.+352    	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 512:	e9 2f       	mov	r30, r25
 514:	e0 61       	ori	r30, 0x10	; 16
 516:	be 2e       	mov	r11, r30
 518:	b4 fe       	sbrs	r11, 4
 51a:	0d c0       	rjmp	.+26     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 51c:	fb 2d       	mov	r31, r11
 51e:	f4 60       	ori	r31, 0x04	; 4
 520:	bf 2e       	mov	r11, r31
 522:	09 c0       	rjmp	.+18     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 524:	34 fe       	sbrs	r3, 4
 526:	0a c0       	rjmp	.+20     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 528:	29 2f       	mov	r18, r25
 52a:	26 60       	ori	r18, 0x06	; 6
 52c:	b2 2e       	mov	r11, r18
 52e:	06 c0       	rjmp	.+12     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 530:	28 e0       	ldi	r18, 0x08	; 8
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	05 c0       	rjmp	.+10     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 536:	20 e1       	ldi	r18, 0x10	; 16
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	20 e1       	ldi	r18, 0x10	; 16
 53e:	32 e0       	ldi	r19, 0x02	; 2
 540:	f8 01       	movw	r30, r16
 542:	b7 fe       	sbrs	r11, 7
 544:	07 c0       	rjmp	.+14     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 546:	60 81       	ld	r22, Z
 548:	71 81       	ldd	r23, Z+1	; 0x01
 54a:	82 81       	ldd	r24, Z+2	; 0x02
 54c:	93 81       	ldd	r25, Z+3	; 0x03
 54e:	0c 5f       	subi	r16, 0xFC	; 252
 550:	1f 4f       	sbci	r17, 0xFF	; 255
 552:	06 c0       	rjmp	.+12     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 554:	60 81       	ld	r22, Z
 556:	71 81       	ldd	r23, Z+1	; 0x01
 558:	80 e0       	ldi	r24, 0x00	; 0
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	0e 5f       	subi	r16, 0xFE	; 254
 55e:	1f 4f       	sbci	r17, 0xFF	; 255
 560:	a3 01       	movw	r20, r6
 562:	0e 94 95 03 	call	0x72a	; 0x72a <__ultoa_invert>
 566:	88 2e       	mov	r8, r24
 568:	86 18       	sub	r8, r6
 56a:	fb 2d       	mov	r31, r11
 56c:	ff 77       	andi	r31, 0x7F	; 127
 56e:	3f 2e       	mov	r3, r31
 570:	36 fe       	sbrs	r3, 6
 572:	0d c0       	rjmp	.+26     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 574:	23 2d       	mov	r18, r3
 576:	2e 7f       	andi	r18, 0xFE	; 254
 578:	a2 2e       	mov	r10, r18
 57a:	89 14       	cp	r8, r9
 57c:	58 f4       	brcc	.+22     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 57e:	34 fe       	sbrs	r3, 4
 580:	0b c0       	rjmp	.+22     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 582:	32 fc       	sbrc	r3, 2
 584:	09 c0       	rjmp	.+18     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 586:	83 2d       	mov	r24, r3
 588:	8e 7e       	andi	r24, 0xEE	; 238
 58a:	a8 2e       	mov	r10, r24
 58c:	05 c0       	rjmp	.+10     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 58e:	b8 2c       	mov	r11, r8
 590:	a3 2c       	mov	r10, r3
 592:	03 c0       	rjmp	.+6      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 594:	b8 2c       	mov	r11, r8
 596:	01 c0       	rjmp	.+2      	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 598:	b9 2c       	mov	r11, r9
 59a:	a4 fe       	sbrs	r10, 4
 59c:	0f c0       	rjmp	.+30     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 59e:	fe 01       	movw	r30, r28
 5a0:	e8 0d       	add	r30, r8
 5a2:	f1 1d       	adc	r31, r1
 5a4:	80 81       	ld	r24, Z
 5a6:	80 33       	cpi	r24, 0x30	; 48
 5a8:	21 f4       	brne	.+8      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5aa:	9a 2d       	mov	r25, r10
 5ac:	99 7e       	andi	r25, 0xE9	; 233
 5ae:	a9 2e       	mov	r10, r25
 5b0:	09 c0       	rjmp	.+18     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b2:	a2 fe       	sbrs	r10, 2
 5b4:	06 c0       	rjmp	.+12     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 5b6:	b3 94       	inc	r11
 5b8:	b3 94       	inc	r11
 5ba:	04 c0       	rjmp	.+8      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5bc:	8a 2d       	mov	r24, r10
 5be:	86 78       	andi	r24, 0x86	; 134
 5c0:	09 f0       	breq	.+2      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5c2:	b3 94       	inc	r11
 5c4:	a3 fc       	sbrc	r10, 3
 5c6:	11 c0       	rjmp	.+34     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5c8:	a0 fe       	sbrs	r10, 0
 5ca:	06 c0       	rjmp	.+12     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5cc:	b2 14       	cp	r11, r2
 5ce:	88 f4       	brcc	.+34     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d0:	28 0c       	add	r2, r8
 5d2:	92 2c       	mov	r9, r2
 5d4:	9b 18       	sub	r9, r11
 5d6:	0e c0       	rjmp	.+28     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5d8:	b2 14       	cp	r11, r2
 5da:	60 f4       	brcc	.+24     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5dc:	b6 01       	movw	r22, r12
 5de:	80 e2       	ldi	r24, 0x20	; 32
 5e0:	90 e0       	ldi	r25, 0x00	; 0
 5e2:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 5e6:	b3 94       	inc	r11
 5e8:	f7 cf       	rjmp	.-18     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5ea:	b2 14       	cp	r11, r2
 5ec:	18 f4       	brcc	.+6      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ee:	2b 18       	sub	r2, r11
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f2:	98 2c       	mov	r9, r8
 5f4:	21 2c       	mov	r2, r1
 5f6:	a4 fe       	sbrs	r10, 4
 5f8:	10 c0       	rjmp	.+32     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 5fa:	b6 01       	movw	r22, r12
 5fc:	80 e3       	ldi	r24, 0x30	; 48
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 604:	a2 fe       	sbrs	r10, 2
 606:	17 c0       	rjmp	.+46     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 608:	a1 fc       	sbrc	r10, 1
 60a:	03 c0       	rjmp	.+6      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 60c:	88 e7       	ldi	r24, 0x78	; 120
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	02 c0       	rjmp	.+4      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 612:	88 e5       	ldi	r24, 0x58	; 88
 614:	90 e0       	ldi	r25, 0x00	; 0
 616:	b6 01       	movw	r22, r12
 618:	0c c0       	rjmp	.+24     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 61a:	8a 2d       	mov	r24, r10
 61c:	86 78       	andi	r24, 0x86	; 134
 61e:	59 f0       	breq	.+22     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 620:	a1 fe       	sbrs	r10, 1
 622:	02 c0       	rjmp	.+4      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 624:	8b e2       	ldi	r24, 0x2B	; 43
 626:	01 c0       	rjmp	.+2      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	a7 fc       	sbrc	r10, 7
 62c:	8d e2       	ldi	r24, 0x2D	; 45
 62e:	b6 01       	movw	r22, r12
 630:	90 e0       	ldi	r25, 0x00	; 0
 632:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 636:	89 14       	cp	r8, r9
 638:	38 f4       	brcc	.+14     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 63a:	b6 01       	movw	r22, r12
 63c:	80 e3       	ldi	r24, 0x30	; 48
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 644:	9a 94       	dec	r9
 646:	f7 cf       	rjmp	.-18     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 648:	8a 94       	dec	r8
 64a:	f3 01       	movw	r30, r6
 64c:	e8 0d       	add	r30, r8
 64e:	f1 1d       	adc	r31, r1
 650:	80 81       	ld	r24, Z
 652:	b6 01       	movw	r22, r12
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 65a:	81 10       	cpse	r8, r1
 65c:	f5 cf       	rjmp	.-22     	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 65e:	22 20       	and	r2, r2
 660:	09 f4       	brne	.+2      	; 0x664 <__LOCK_REGION_LENGTH__+0x264>
 662:	42 ce       	rjmp	.-892    	; 0x2e8 <vfprintf+0x24>
 664:	b6 01       	movw	r22, r12
 666:	80 e2       	ldi	r24, 0x20	; 32
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	0e 94 59 03 	call	0x6b2	; 0x6b2 <fputc>
 66e:	2a 94       	dec	r2
 670:	f6 cf       	rjmp	.-20     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 672:	f6 01       	movw	r30, r12
 674:	86 81       	ldd	r24, Z+6	; 0x06
 676:	97 81       	ldd	r25, Z+7	; 0x07
 678:	02 c0       	rjmp	.+4      	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 67a:	8f ef       	ldi	r24, 0xFF	; 255
 67c:	9f ef       	ldi	r25, 0xFF	; 255
 67e:	2b 96       	adiw	r28, 0x0b	; 11
 680:	e2 e1       	ldi	r30, 0x12	; 18
 682:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__epilogue_restores__>

00000686 <strnlen_P>:
 686:	fc 01       	movw	r30, r24
 688:	05 90       	lpm	r0, Z+
 68a:	61 50       	subi	r22, 0x01	; 1
 68c:	70 40       	sbci	r23, 0x00	; 0
 68e:	01 10       	cpse	r0, r1
 690:	d8 f7       	brcc	.-10     	; 0x688 <strnlen_P+0x2>
 692:	80 95       	com	r24
 694:	90 95       	com	r25
 696:	8e 0f       	add	r24, r30
 698:	9f 1f       	adc	r25, r31
 69a:	08 95       	ret

0000069c <strnlen>:
 69c:	fc 01       	movw	r30, r24
 69e:	61 50       	subi	r22, 0x01	; 1
 6a0:	70 40       	sbci	r23, 0x00	; 0
 6a2:	01 90       	ld	r0, Z+
 6a4:	01 10       	cpse	r0, r1
 6a6:	d8 f7       	brcc	.-10     	; 0x69e <strnlen+0x2>
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	8e 0f       	add	r24, r30
 6ae:	9f 1f       	adc	r25, r31
 6b0:	08 95       	ret

000006b2 <fputc>:
 6b2:	0f 93       	push	r16
 6b4:	1f 93       	push	r17
 6b6:	cf 93       	push	r28
 6b8:	df 93       	push	r29
 6ba:	fb 01       	movw	r30, r22
 6bc:	23 81       	ldd	r18, Z+3	; 0x03
 6be:	21 fd       	sbrc	r18, 1
 6c0:	03 c0       	rjmp	.+6      	; 0x6c8 <fputc+0x16>
 6c2:	8f ef       	ldi	r24, 0xFF	; 255
 6c4:	9f ef       	ldi	r25, 0xFF	; 255
 6c6:	2c c0       	rjmp	.+88     	; 0x720 <fputc+0x6e>
 6c8:	22 ff       	sbrs	r18, 2
 6ca:	16 c0       	rjmp	.+44     	; 0x6f8 <fputc+0x46>
 6cc:	46 81       	ldd	r20, Z+6	; 0x06
 6ce:	57 81       	ldd	r21, Z+7	; 0x07
 6d0:	24 81       	ldd	r18, Z+4	; 0x04
 6d2:	35 81       	ldd	r19, Z+5	; 0x05
 6d4:	42 17       	cp	r20, r18
 6d6:	53 07       	cpc	r21, r19
 6d8:	44 f4       	brge	.+16     	; 0x6ea <fputc+0x38>
 6da:	a0 81       	ld	r26, Z
 6dc:	b1 81       	ldd	r27, Z+1	; 0x01
 6de:	9d 01       	movw	r18, r26
 6e0:	2f 5f       	subi	r18, 0xFF	; 255
 6e2:	3f 4f       	sbci	r19, 0xFF	; 255
 6e4:	31 83       	std	Z+1, r19	; 0x01
 6e6:	20 83       	st	Z, r18
 6e8:	8c 93       	st	X, r24
 6ea:	26 81       	ldd	r18, Z+6	; 0x06
 6ec:	37 81       	ldd	r19, Z+7	; 0x07
 6ee:	2f 5f       	subi	r18, 0xFF	; 255
 6f0:	3f 4f       	sbci	r19, 0xFF	; 255
 6f2:	37 83       	std	Z+7, r19	; 0x07
 6f4:	26 83       	std	Z+6, r18	; 0x06
 6f6:	14 c0       	rjmp	.+40     	; 0x720 <fputc+0x6e>
 6f8:	8b 01       	movw	r16, r22
 6fa:	ec 01       	movw	r28, r24
 6fc:	fb 01       	movw	r30, r22
 6fe:	00 84       	ldd	r0, Z+8	; 0x08
 700:	f1 85       	ldd	r31, Z+9	; 0x09
 702:	e0 2d       	mov	r30, r0
 704:	09 95       	icall
 706:	89 2b       	or	r24, r25
 708:	e1 f6       	brne	.-72     	; 0x6c2 <fputc+0x10>
 70a:	d8 01       	movw	r26, r16
 70c:	16 96       	adiw	r26, 0x06	; 6
 70e:	8d 91       	ld	r24, X+
 710:	9c 91       	ld	r25, X
 712:	17 97       	sbiw	r26, 0x07	; 7
 714:	01 96       	adiw	r24, 0x01	; 1
 716:	17 96       	adiw	r26, 0x07	; 7
 718:	9c 93       	st	X, r25
 71a:	8e 93       	st	-X, r24
 71c:	16 97       	sbiw	r26, 0x06	; 6
 71e:	ce 01       	movw	r24, r28
 720:	df 91       	pop	r29
 722:	cf 91       	pop	r28
 724:	1f 91       	pop	r17
 726:	0f 91       	pop	r16
 728:	08 95       	ret

0000072a <__ultoa_invert>:
 72a:	fa 01       	movw	r30, r20
 72c:	aa 27       	eor	r26, r26
 72e:	28 30       	cpi	r18, 0x08	; 8
 730:	51 f1       	breq	.+84     	; 0x786 <__ultoa_invert+0x5c>
 732:	20 31       	cpi	r18, 0x10	; 16
 734:	81 f1       	breq	.+96     	; 0x796 <__ultoa_invert+0x6c>
 736:	e8 94       	clt
 738:	6f 93       	push	r22
 73a:	6e 7f       	andi	r22, 0xFE	; 254
 73c:	6e 5f       	subi	r22, 0xFE	; 254
 73e:	7f 4f       	sbci	r23, 0xFF	; 255
 740:	8f 4f       	sbci	r24, 0xFF	; 255
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	af 4f       	sbci	r26, 0xFF	; 255
 746:	b1 e0       	ldi	r27, 0x01	; 1
 748:	3e d0       	rcall	.+124    	; 0x7c6 <__ultoa_invert+0x9c>
 74a:	b4 e0       	ldi	r27, 0x04	; 4
 74c:	3c d0       	rcall	.+120    	; 0x7c6 <__ultoa_invert+0x9c>
 74e:	67 0f       	add	r22, r23
 750:	78 1f       	adc	r23, r24
 752:	89 1f       	adc	r24, r25
 754:	9a 1f       	adc	r25, r26
 756:	a1 1d       	adc	r26, r1
 758:	68 0f       	add	r22, r24
 75a:	79 1f       	adc	r23, r25
 75c:	8a 1f       	adc	r24, r26
 75e:	91 1d       	adc	r25, r1
 760:	a1 1d       	adc	r26, r1
 762:	6a 0f       	add	r22, r26
 764:	71 1d       	adc	r23, r1
 766:	81 1d       	adc	r24, r1
 768:	91 1d       	adc	r25, r1
 76a:	a1 1d       	adc	r26, r1
 76c:	20 d0       	rcall	.+64     	; 0x7ae <__ultoa_invert+0x84>
 76e:	09 f4       	brne	.+2      	; 0x772 <__ultoa_invert+0x48>
 770:	68 94       	set
 772:	3f 91       	pop	r19
 774:	2a e0       	ldi	r18, 0x0A	; 10
 776:	26 9f       	mul	r18, r22
 778:	11 24       	eor	r1, r1
 77a:	30 19       	sub	r19, r0
 77c:	30 5d       	subi	r19, 0xD0	; 208
 77e:	31 93       	st	Z+, r19
 780:	de f6       	brtc	.-74     	; 0x738 <__ultoa_invert+0xe>
 782:	cf 01       	movw	r24, r30
 784:	08 95       	ret
 786:	46 2f       	mov	r20, r22
 788:	47 70       	andi	r20, 0x07	; 7
 78a:	40 5d       	subi	r20, 0xD0	; 208
 78c:	41 93       	st	Z+, r20
 78e:	b3 e0       	ldi	r27, 0x03	; 3
 790:	0f d0       	rcall	.+30     	; 0x7b0 <__ultoa_invert+0x86>
 792:	c9 f7       	brne	.-14     	; 0x786 <__ultoa_invert+0x5c>
 794:	f6 cf       	rjmp	.-20     	; 0x782 <__ultoa_invert+0x58>
 796:	46 2f       	mov	r20, r22
 798:	4f 70       	andi	r20, 0x0F	; 15
 79a:	40 5d       	subi	r20, 0xD0	; 208
 79c:	4a 33       	cpi	r20, 0x3A	; 58
 79e:	18 f0       	brcs	.+6      	; 0x7a6 <__ultoa_invert+0x7c>
 7a0:	49 5d       	subi	r20, 0xD9	; 217
 7a2:	31 fd       	sbrc	r19, 1
 7a4:	40 52       	subi	r20, 0x20	; 32
 7a6:	41 93       	st	Z+, r20
 7a8:	02 d0       	rcall	.+4      	; 0x7ae <__ultoa_invert+0x84>
 7aa:	a9 f7       	brne	.-22     	; 0x796 <__ultoa_invert+0x6c>
 7ac:	ea cf       	rjmp	.-44     	; 0x782 <__ultoa_invert+0x58>
 7ae:	b4 e0       	ldi	r27, 0x04	; 4
 7b0:	a6 95       	lsr	r26
 7b2:	97 95       	ror	r25
 7b4:	87 95       	ror	r24
 7b6:	77 95       	ror	r23
 7b8:	67 95       	ror	r22
 7ba:	ba 95       	dec	r27
 7bc:	c9 f7       	brne	.-14     	; 0x7b0 <__ultoa_invert+0x86>
 7be:	00 97       	sbiw	r24, 0x00	; 0
 7c0:	61 05       	cpc	r22, r1
 7c2:	71 05       	cpc	r23, r1
 7c4:	08 95       	ret
 7c6:	9b 01       	movw	r18, r22
 7c8:	ac 01       	movw	r20, r24
 7ca:	0a 2e       	mov	r0, r26
 7cc:	06 94       	lsr	r0
 7ce:	57 95       	ror	r21
 7d0:	47 95       	ror	r20
 7d2:	37 95       	ror	r19
 7d4:	27 95       	ror	r18
 7d6:	ba 95       	dec	r27
 7d8:	c9 f7       	brne	.-14     	; 0x7cc <__ultoa_invert+0xa2>
 7da:	62 0f       	add	r22, r18
 7dc:	73 1f       	adc	r23, r19
 7de:	84 1f       	adc	r24, r20
 7e0:	95 1f       	adc	r25, r21
 7e2:	a0 1d       	adc	r26, r0
 7e4:	08 95       	ret

000007e6 <__prologue_saves__>:
 7e6:	2f 92       	push	r2
 7e8:	3f 92       	push	r3
 7ea:	4f 92       	push	r4
 7ec:	5f 92       	push	r5
 7ee:	6f 92       	push	r6
 7f0:	7f 92       	push	r7
 7f2:	8f 92       	push	r8
 7f4:	9f 92       	push	r9
 7f6:	af 92       	push	r10
 7f8:	bf 92       	push	r11
 7fa:	cf 92       	push	r12
 7fc:	df 92       	push	r13
 7fe:	ef 92       	push	r14
 800:	ff 92       	push	r15
 802:	0f 93       	push	r16
 804:	1f 93       	push	r17
 806:	cf 93       	push	r28
 808:	df 93       	push	r29
 80a:	cd b7       	in	r28, 0x3d	; 61
 80c:	de b7       	in	r29, 0x3e	; 62
 80e:	ca 1b       	sub	r28, r26
 810:	db 0b       	sbc	r29, r27
 812:	0f b6       	in	r0, 0x3f	; 63
 814:	f8 94       	cli
 816:	de bf       	out	0x3e, r29	; 62
 818:	0f be       	out	0x3f, r0	; 63
 81a:	cd bf       	out	0x3d, r28	; 61
 81c:	09 94       	ijmp

0000081e <__epilogue_restores__>:
 81e:	2a 88       	ldd	r2, Y+18	; 0x12
 820:	39 88       	ldd	r3, Y+17	; 0x11
 822:	48 88       	ldd	r4, Y+16	; 0x10
 824:	5f 84       	ldd	r5, Y+15	; 0x0f
 826:	6e 84       	ldd	r6, Y+14	; 0x0e
 828:	7d 84       	ldd	r7, Y+13	; 0x0d
 82a:	8c 84       	ldd	r8, Y+12	; 0x0c
 82c:	9b 84       	ldd	r9, Y+11	; 0x0b
 82e:	aa 84       	ldd	r10, Y+10	; 0x0a
 830:	b9 84       	ldd	r11, Y+9	; 0x09
 832:	c8 84       	ldd	r12, Y+8	; 0x08
 834:	df 80       	ldd	r13, Y+7	; 0x07
 836:	ee 80       	ldd	r14, Y+6	; 0x06
 838:	fd 80       	ldd	r15, Y+5	; 0x05
 83a:	0c 81       	ldd	r16, Y+4	; 0x04
 83c:	1b 81       	ldd	r17, Y+3	; 0x03
 83e:	aa 81       	ldd	r26, Y+2	; 0x02
 840:	b9 81       	ldd	r27, Y+1	; 0x01
 842:	ce 0f       	add	r28, r30
 844:	d1 1d       	adc	r29, r1
 846:	0f b6       	in	r0, 0x3f	; 63
 848:	f8 94       	cli
 84a:	de bf       	out	0x3e, r29	; 62
 84c:	0f be       	out	0x3f, r0	; 63
 84e:	cd bf       	out	0x3d, r28	; 61
 850:	ed 01       	movw	r28, r26
 852:	08 95       	ret

00000854 <_exit>:
 854:	f8 94       	cli

00000856 <__stop_program>:
 856:	ff cf       	rjmp	.-2      	; 0x856 <__stop_program>
=======
000000dc <__vector_11>:

}

float read_dist(){
	return dist;
}
  dc:	1f 92       	push	r1
  de:	0f 92       	push	r0
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	0f 92       	push	r0
  e4:	11 24       	eor	r1, r1
  e6:	8f 93       	push	r24
  e8:	9f 93       	push	r25
  ea:	95 b1       	in	r25, 0x05	; 5
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	98 27       	eor	r25, r24
  f0:	95 b9       	out	0x05, r25	; 5
  f2:	94 e0       	ldi	r25, 0x04	; 4
  f4:	9a 95       	dec	r25
  f6:	f1 f7       	brne	.-4      	; 0xf4 <__vector_11+0x18>
  f8:	95 b1       	in	r25, 0x05	; 5
  fa:	89 27       	eor	r24, r25
  fc:	85 b9       	out	0x05, r24	; 5
  fe:	2d 9a       	sbi	0x05, 5	; 5
 100:	9f 91       	pop	r25
 102:	8f 91       	pop	r24
 104:	0f 90       	pop	r0
 106:	0f be       	out	0x3f, r0	; 63
 108:	0f 90       	pop	r0
 10a:	1f 90       	pop	r1
 10c:	18 95       	reti

0000010e <__vector_10>:
 10e:	1f 92       	push	r1
 110:	0f 92       	push	r0
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	0f 92       	push	r0
 116:	11 24       	eor	r1, r1
 118:	cf 92       	push	r12
 11a:	df 92       	push	r13
 11c:	ef 92       	push	r14
 11e:	ff 92       	push	r15
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	af 93       	push	r26
 132:	bf 93       	push	r27
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ef 93       	push	r30
 13a:	ff 93       	push	r31
 13c:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 140:	86 ff       	sbrs	r24, 6
 142:	0e c0       	rjmp	.+28     	; 0x160 <__vector_10+0x52>
 144:	e1 e8       	ldi	r30, 0x81	; 129
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	8f 7b       	andi	r24, 0xBF	; 191
 14c:	80 83       	st	Z, r24
 14e:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 152:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 156:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <rising+0x1>
 15a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <rising>
 15e:	42 c0       	rjmp	.+132    	; 0x1e4 <__vector_10+0xd6>
 160:	e1 e8       	ldi	r30, 0x81	; 129
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	80 81       	ld	r24, Z
 166:	80 64       	ori	r24, 0x40	; 64
 168:	80 83       	st	Z, r24
 16a:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 16e:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 172:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <falling+0x1>
 176:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <falling>
 17a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <rising>
 17e:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <rising+0x1>
 182:	eb 01       	movw	r28, r22
 184:	c8 1b       	sub	r28, r24
 186:	d9 0b       	sbc	r29, r25
 188:	d0 93 09 01 	sts	0x0109, r29	; 0x800109 <counts+0x1>
 18c:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <counts>
 190:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <us_per_count>
 194:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <us_per_count+0x1>
 198:	80 e0       	ldi	r24, 0x00	; 0
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	0e 94 a1 01 	call	0x342	; 0x342 <__floatunsisf>
 1a0:	6b 01       	movw	r12, r22
 1a2:	7c 01       	movw	r14, r24
 1a4:	be 01       	movw	r22, r28
 1a6:	dd 0f       	add	r29, r29
 1a8:	88 0b       	sbc	r24, r24
 1aa:	99 0b       	sbc	r25, r25
 1ac:	0e 94 a3 01 	call	0x346	; 0x346 <__floatsisf>
 1b0:	9b 01       	movw	r18, r22
 1b2:	ac 01       	movw	r20, r24
 1b4:	c7 01       	movw	r24, r14
 1b6:	b6 01       	movw	r22, r12
 1b8:	0e 94 2f 02 	call	0x45e	; 0x45e <__mulsf3>
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	40 e2       	ldi	r20, 0x20	; 32
 1c2:	51 e4       	ldi	r21, 0x41	; 65
 1c4:	0e 94 2f 02 	call	0x45e	; 0x45e <__mulsf3>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	41 e1       	ldi	r20, 0x11	; 17
 1ce:	54 e4       	ldi	r21, 0x44	; 68
 1d0:	0e 94 2f 01 	call	0x25e	; 0x25e <__divsf3>
 1d4:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <_edata>
 1d8:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <_edata+0x1>
 1dc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_edata+0x2>
 1e0:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_edata+0x3>
 1e4:	2d 98       	cbi	0x05, 5	; 5
 1e6:	ff 91       	pop	r31
 1e8:	ef 91       	pop	r30
 1ea:	df 91       	pop	r29
 1ec:	cf 91       	pop	r28
 1ee:	bf 91       	pop	r27
 1f0:	af 91       	pop	r26
 1f2:	9f 91       	pop	r25
 1f4:	8f 91       	pop	r24
 1f6:	7f 91       	pop	r23
 1f8:	6f 91       	pop	r22
 1fa:	5f 91       	pop	r21
 1fc:	4f 91       	pop	r20
 1fe:	3f 91       	pop	r19
 200:	2f 91       	pop	r18
 202:	ff 90       	pop	r15
 204:	ef 90       	pop	r14
 206:	df 90       	pop	r13
 208:	cf 90       	pop	r12
 20a:	0f 90       	pop	r0
 20c:	0f be       	out	0x3f, r0	; 63
 20e:	0f 90       	pop	r0
 210:	1f 90       	pop	r1
 212:	18 95       	reti

00000214 <init_ultrasonic_sensor>:
 214:	22 9a       	sbi	0x04, 2	; 4
 216:	e1 e8       	ldi	r30, 0x81	; 129
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	80 81       	ld	r24, Z
 21c:	80 68       	ori	r24, 0x80	; 128
 21e:	80 83       	st	Z, r24
 220:	80 81       	ld	r24, Z
 222:	83 60       	ori	r24, 0x03	; 3
 224:	80 83       	st	Z, r24
 226:	80 81       	ld	r24, Z
 228:	88 60       	ori	r24, 0x08	; 8
 22a:	80 83       	st	Z, r24
 22c:	af e6       	ldi	r26, 0x6F	; 111
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	8c 91       	ld	r24, X
 232:	82 62       	ori	r24, 0x22	; 34
 234:	8c 93       	st	X, r24
 236:	80 81       	ld	r24, Z
 238:	80 64       	ori	r24, 0x40	; 64
 23a:	80 83       	st	Z, r24
 23c:	8c e5       	ldi	r24, 0x5C	; 92
 23e:	94 e4       	ldi	r25, 0x44	; 68
 240:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 244:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 248:	84 e0       	ldi	r24, 0x04	; 4
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <us_per_count+0x1>
 250:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <us_per_count>
 254:	78 94       	sei
 256:	08 95       	ret

00000258 <main>:

int main(void){
	
	init_ultrasonic_sensor();
 258:	0e 94 0a 01 	call	0x214	; 0x214 <init_ultrasonic_sensor>
 25c:	ff cf       	rjmp	.-2      	; 0x25c <main+0x4>

0000025e <__divsf3>:
 25e:	0e 94 43 01 	call	0x286	; 0x286 <__divsf3x>
 262:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_round>
 266:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscB>
 26a:	58 f0       	brcs	.+22     	; 0x282 <__divsf3+0x24>
 26c:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_pscA>
 270:	40 f0       	brcs	.+16     	; 0x282 <__divsf3+0x24>
 272:	29 f4       	brne	.+10     	; 0x27e <__divsf3+0x20>
 274:	5f 3f       	cpi	r21, 0xFF	; 255
 276:	29 f0       	breq	.+10     	; 0x282 <__divsf3+0x24>
 278:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_inf>
 27c:	51 11       	cpse	r21, r1
 27e:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_szero>
 282:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <__fp_nan>

00000286 <__divsf3x>:
 286:	0e 94 06 02 	call	0x40c	; 0x40c <__fp_split3>
 28a:	68 f3       	brcs	.-38     	; 0x266 <__divsf3+0x8>

0000028c <__divsf3_pse>:
 28c:	99 23       	and	r25, r25
 28e:	b1 f3       	breq	.-20     	; 0x27c <__divsf3+0x1e>
 290:	55 23       	and	r21, r21
 292:	91 f3       	breq	.-28     	; 0x278 <__divsf3+0x1a>
 294:	95 1b       	sub	r25, r21
 296:	55 0b       	sbc	r21, r21
 298:	bb 27       	eor	r27, r27
 29a:	aa 27       	eor	r26, r26
 29c:	62 17       	cp	r22, r18
 29e:	73 07       	cpc	r23, r19
 2a0:	84 07       	cpc	r24, r20
 2a2:	38 f0       	brcs	.+14     	; 0x2b2 <__divsf3_pse+0x26>
 2a4:	9f 5f       	subi	r25, 0xFF	; 255
 2a6:	5f 4f       	sbci	r21, 0xFF	; 255
 2a8:	22 0f       	add	r18, r18
 2aa:	33 1f       	adc	r19, r19
 2ac:	44 1f       	adc	r20, r20
 2ae:	aa 1f       	adc	r26, r26
 2b0:	a9 f3       	breq	.-22     	; 0x29c <__divsf3_pse+0x10>
 2b2:	35 d0       	rcall	.+106    	; 0x31e <__divsf3_pse+0x92>
 2b4:	0e 2e       	mov	r0, r30
 2b6:	3a f0       	brmi	.+14     	; 0x2c6 <__divsf3_pse+0x3a>
 2b8:	e0 e8       	ldi	r30, 0x80	; 128
 2ba:	32 d0       	rcall	.+100    	; 0x320 <__divsf3_pse+0x94>
 2bc:	91 50       	subi	r25, 0x01	; 1
 2be:	50 40       	sbci	r21, 0x00	; 0
 2c0:	e6 95       	lsr	r30
 2c2:	00 1c       	adc	r0, r0
 2c4:	ca f7       	brpl	.-14     	; 0x2b8 <__divsf3_pse+0x2c>
 2c6:	2b d0       	rcall	.+86     	; 0x31e <__divsf3_pse+0x92>
 2c8:	fe 2f       	mov	r31, r30
 2ca:	29 d0       	rcall	.+82     	; 0x31e <__divsf3_pse+0x92>
 2cc:	66 0f       	add	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	bb 1f       	adc	r27, r27
 2d4:	26 17       	cp	r18, r22
 2d6:	37 07       	cpc	r19, r23
 2d8:	48 07       	cpc	r20, r24
 2da:	ab 07       	cpc	r26, r27
 2dc:	b0 e8       	ldi	r27, 0x80	; 128
 2de:	09 f0       	breq	.+2      	; 0x2e2 <__divsf3_pse+0x56>
 2e0:	bb 0b       	sbc	r27, r27
 2e2:	80 2d       	mov	r24, r0
 2e4:	bf 01       	movw	r22, r30
 2e6:	ff 27       	eor	r31, r31
 2e8:	93 58       	subi	r25, 0x83	; 131
 2ea:	5f 4f       	sbci	r21, 0xFF	; 255
 2ec:	3a f0       	brmi	.+14     	; 0x2fc <__divsf3_pse+0x70>
 2ee:	9e 3f       	cpi	r25, 0xFE	; 254
 2f0:	51 05       	cpc	r21, r1
 2f2:	78 f0       	brcs	.+30     	; 0x312 <__divsf3_pse+0x86>
 2f4:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_inf>
 2f8:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_szero>
 2fc:	5f 3f       	cpi	r21, 0xFF	; 255
 2fe:	e4 f3       	brlt	.-8      	; 0x2f8 <__divsf3_pse+0x6c>
 300:	98 3e       	cpi	r25, 0xE8	; 232
 302:	d4 f3       	brlt	.-12     	; 0x2f8 <__divsf3_pse+0x6c>
 304:	86 95       	lsr	r24
 306:	77 95       	ror	r23
 308:	67 95       	ror	r22
 30a:	b7 95       	ror	r27
 30c:	f7 95       	ror	r31
 30e:	9f 5f       	subi	r25, 0xFF	; 255
 310:	c9 f7       	brne	.-14     	; 0x304 <__divsf3_pse+0x78>
 312:	88 0f       	add	r24, r24
 314:	91 1d       	adc	r25, r1
 316:	96 95       	lsr	r25
 318:	87 95       	ror	r24
 31a:	97 f9       	bld	r25, 7
 31c:	08 95       	ret
 31e:	e1 e0       	ldi	r30, 0x01	; 1
 320:	66 0f       	add	r22, r22
 322:	77 1f       	adc	r23, r23
 324:	88 1f       	adc	r24, r24
 326:	bb 1f       	adc	r27, r27
 328:	62 17       	cp	r22, r18
 32a:	73 07       	cpc	r23, r19
 32c:	84 07       	cpc	r24, r20
 32e:	ba 07       	cpc	r27, r26
 330:	20 f0       	brcs	.+8      	; 0x33a <__divsf3_pse+0xae>
 332:	62 1b       	sub	r22, r18
 334:	73 0b       	sbc	r23, r19
 336:	84 0b       	sbc	r24, r20
 338:	ba 0b       	sbc	r27, r26
 33a:	ee 1f       	adc	r30, r30
 33c:	88 f7       	brcc	.-30     	; 0x320 <__divsf3_pse+0x94>
 33e:	e0 95       	com	r30
 340:	08 95       	ret

00000342 <__floatunsisf>:
 342:	e8 94       	clt
 344:	09 c0       	rjmp	.+18     	; 0x358 <__floatsisf+0x12>

00000346 <__floatsisf>:
 346:	97 fb       	bst	r25, 7
 348:	3e f4       	brtc	.+14     	; 0x358 <__floatsisf+0x12>
 34a:	90 95       	com	r25
 34c:	80 95       	com	r24
 34e:	70 95       	com	r23
 350:	61 95       	neg	r22
 352:	7f 4f       	sbci	r23, 0xFF	; 255
 354:	8f 4f       	sbci	r24, 0xFF	; 255
 356:	9f 4f       	sbci	r25, 0xFF	; 255
 358:	99 23       	and	r25, r25
 35a:	a9 f0       	breq	.+42     	; 0x386 <__floatsisf+0x40>
 35c:	f9 2f       	mov	r31, r25
 35e:	96 e9       	ldi	r25, 0x96	; 150
 360:	bb 27       	eor	r27, r27
 362:	93 95       	inc	r25
 364:	f6 95       	lsr	r31
 366:	87 95       	ror	r24
 368:	77 95       	ror	r23
 36a:	67 95       	ror	r22
 36c:	b7 95       	ror	r27
 36e:	f1 11       	cpse	r31, r1
 370:	f8 cf       	rjmp	.-16     	; 0x362 <__floatsisf+0x1c>
 372:	fa f4       	brpl	.+62     	; 0x3b2 <__floatsisf+0x6c>
 374:	bb 0f       	add	r27, r27
 376:	11 f4       	brne	.+4      	; 0x37c <__floatsisf+0x36>
 378:	60 ff       	sbrs	r22, 0
 37a:	1b c0       	rjmp	.+54     	; 0x3b2 <__floatsisf+0x6c>
 37c:	6f 5f       	subi	r22, 0xFF	; 255
 37e:	7f 4f       	sbci	r23, 0xFF	; 255
 380:	8f 4f       	sbci	r24, 0xFF	; 255
 382:	9f 4f       	sbci	r25, 0xFF	; 255
 384:	16 c0       	rjmp	.+44     	; 0x3b2 <__floatsisf+0x6c>
 386:	88 23       	and	r24, r24
 388:	11 f0       	breq	.+4      	; 0x38e <__floatsisf+0x48>
 38a:	96 e9       	ldi	r25, 0x96	; 150
 38c:	11 c0       	rjmp	.+34     	; 0x3b0 <__floatsisf+0x6a>
 38e:	77 23       	and	r23, r23
 390:	21 f0       	breq	.+8      	; 0x39a <__floatsisf+0x54>
 392:	9e e8       	ldi	r25, 0x8E	; 142
 394:	87 2f       	mov	r24, r23
 396:	76 2f       	mov	r23, r22
 398:	05 c0       	rjmp	.+10     	; 0x3a4 <__floatsisf+0x5e>
 39a:	66 23       	and	r22, r22
 39c:	71 f0       	breq	.+28     	; 0x3ba <__floatsisf+0x74>
 39e:	96 e8       	ldi	r25, 0x86	; 134
 3a0:	86 2f       	mov	r24, r22
 3a2:	70 e0       	ldi	r23, 0x00	; 0
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	2a f0       	brmi	.+10     	; 0x3b2 <__floatsisf+0x6c>
 3a8:	9a 95       	dec	r25
 3aa:	66 0f       	add	r22, r22
 3ac:	77 1f       	adc	r23, r23
 3ae:	88 1f       	adc	r24, r24
 3b0:	da f7       	brpl	.-10     	; 0x3a8 <__floatsisf+0x62>
 3b2:	88 0f       	add	r24, r24
 3b4:	96 95       	lsr	r25
 3b6:	87 95       	ror	r24
 3b8:	97 f9       	bld	r25, 7
 3ba:	08 95       	ret

000003bc <__fp_inf>:
 3bc:	97 f9       	bld	r25, 7
 3be:	9f 67       	ori	r25, 0x7F	; 127
 3c0:	80 e8       	ldi	r24, 0x80	; 128
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	08 95       	ret

000003c8 <__fp_nan>:
 3c8:	9f ef       	ldi	r25, 0xFF	; 255
 3ca:	80 ec       	ldi	r24, 0xC0	; 192
 3cc:	08 95       	ret

000003ce <__fp_pscA>:
 3ce:	00 24       	eor	r0, r0
 3d0:	0a 94       	dec	r0
 3d2:	16 16       	cp	r1, r22
 3d4:	17 06       	cpc	r1, r23
 3d6:	18 06       	cpc	r1, r24
 3d8:	09 06       	cpc	r0, r25
 3da:	08 95       	ret

000003dc <__fp_pscB>:
 3dc:	00 24       	eor	r0, r0
 3de:	0a 94       	dec	r0
 3e0:	12 16       	cp	r1, r18
 3e2:	13 06       	cpc	r1, r19
 3e4:	14 06       	cpc	r1, r20
 3e6:	05 06       	cpc	r0, r21
 3e8:	08 95       	ret

000003ea <__fp_round>:
 3ea:	09 2e       	mov	r0, r25
 3ec:	03 94       	inc	r0
 3ee:	00 0c       	add	r0, r0
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <__fp_round+0xc>
 3f2:	88 23       	and	r24, r24
 3f4:	52 f0       	brmi	.+20     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3f6:	bb 0f       	add	r27, r27
 3f8:	40 f4       	brcc	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fa:	bf 2b       	or	r27, r31
 3fc:	11 f4       	brne	.+4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fe:	60 ff       	sbrs	r22, 0
 400:	04 c0       	rjmp	.+8      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 402:	6f 5f       	subi	r22, 0xFF	; 255
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	8f 4f       	sbci	r24, 0xFF	; 255
 408:	9f 4f       	sbci	r25, 0xFF	; 255
 40a:	08 95       	ret

0000040c <__fp_split3>:
 40c:	57 fd       	sbrc	r21, 7
 40e:	90 58       	subi	r25, 0x80	; 128
 410:	44 0f       	add	r20, r20
 412:	55 1f       	adc	r21, r21
 414:	59 f0       	breq	.+22     	; 0x42c <__fp_splitA+0x10>
 416:	5f 3f       	cpi	r21, 0xFF	; 255
 418:	71 f0       	breq	.+28     	; 0x436 <__fp_splitA+0x1a>
 41a:	47 95       	ror	r20

0000041c <__fp_splitA>:
 41c:	88 0f       	add	r24, r24
 41e:	97 fb       	bst	r25, 7
 420:	99 1f       	adc	r25, r25
 422:	61 f0       	breq	.+24     	; 0x43c <__fp_splitA+0x20>
 424:	9f 3f       	cpi	r25, 0xFF	; 255
 426:	79 f0       	breq	.+30     	; 0x446 <__fp_splitA+0x2a>
 428:	87 95       	ror	r24
 42a:	08 95       	ret
 42c:	12 16       	cp	r1, r18
 42e:	13 06       	cpc	r1, r19
 430:	14 06       	cpc	r1, r20
 432:	55 1f       	adc	r21, r21
 434:	f2 cf       	rjmp	.-28     	; 0x41a <__fp_split3+0xe>
 436:	46 95       	lsr	r20
 438:	f1 df       	rcall	.-30     	; 0x41c <__fp_splitA>
 43a:	08 c0       	rjmp	.+16     	; 0x44c <__fp_splitA+0x30>
 43c:	16 16       	cp	r1, r22
 43e:	17 06       	cpc	r1, r23
 440:	18 06       	cpc	r1, r24
 442:	99 1f       	adc	r25, r25
 444:	f1 cf       	rjmp	.-30     	; 0x428 <__fp_splitA+0xc>
 446:	86 95       	lsr	r24
 448:	71 05       	cpc	r23, r1
 44a:	61 05       	cpc	r22, r1
 44c:	08 94       	sec
 44e:	08 95       	ret

00000450 <__fp_zero>:
 450:	e8 94       	clt

00000452 <__fp_szero>:
 452:	bb 27       	eor	r27, r27
 454:	66 27       	eor	r22, r22
 456:	77 27       	eor	r23, r23
 458:	cb 01       	movw	r24, r22
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret

0000045e <__mulsf3>:
 45e:	0e 94 42 02 	call	0x484	; 0x484 <__mulsf3x>
 462:	0c 94 f5 01 	jmp	0x3ea	; 0x3ea <__fp_round>
 466:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_pscA>
 46a:	38 f0       	brcs	.+14     	; 0x47a <__mulsf3+0x1c>
 46c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_pscB>
 470:	20 f0       	brcs	.+8      	; 0x47a <__mulsf3+0x1c>
 472:	95 23       	and	r25, r21
 474:	11 f0       	breq	.+4      	; 0x47a <__mulsf3+0x1c>
 476:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_inf>
 47a:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <__fp_nan>
 47e:	11 24       	eor	r1, r1
 480:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_szero>

00000484 <__mulsf3x>:
 484:	0e 94 06 02 	call	0x40c	; 0x40c <__fp_split3>
 488:	70 f3       	brcs	.-36     	; 0x466 <__mulsf3+0x8>

0000048a <__mulsf3_pse>:
 48a:	95 9f       	mul	r25, r21
 48c:	c1 f3       	breq	.-16     	; 0x47e <__mulsf3+0x20>
 48e:	95 0f       	add	r25, r21
 490:	50 e0       	ldi	r21, 0x00	; 0
 492:	55 1f       	adc	r21, r21
 494:	62 9f       	mul	r22, r18
 496:	f0 01       	movw	r30, r0
 498:	72 9f       	mul	r23, r18
 49a:	bb 27       	eor	r27, r27
 49c:	f0 0d       	add	r31, r0
 49e:	b1 1d       	adc	r27, r1
 4a0:	63 9f       	mul	r22, r19
 4a2:	aa 27       	eor	r26, r26
 4a4:	f0 0d       	add	r31, r0
 4a6:	b1 1d       	adc	r27, r1
 4a8:	aa 1f       	adc	r26, r26
 4aa:	64 9f       	mul	r22, r20
 4ac:	66 27       	eor	r22, r22
 4ae:	b0 0d       	add	r27, r0
 4b0:	a1 1d       	adc	r26, r1
 4b2:	66 1f       	adc	r22, r22
 4b4:	82 9f       	mul	r24, r18
 4b6:	22 27       	eor	r18, r18
 4b8:	b0 0d       	add	r27, r0
 4ba:	a1 1d       	adc	r26, r1
 4bc:	62 1f       	adc	r22, r18
 4be:	73 9f       	mul	r23, r19
 4c0:	b0 0d       	add	r27, r0
 4c2:	a1 1d       	adc	r26, r1
 4c4:	62 1f       	adc	r22, r18
 4c6:	83 9f       	mul	r24, r19
 4c8:	a0 0d       	add	r26, r0
 4ca:	61 1d       	adc	r22, r1
 4cc:	22 1f       	adc	r18, r18
 4ce:	74 9f       	mul	r23, r20
 4d0:	33 27       	eor	r19, r19
 4d2:	a0 0d       	add	r26, r0
 4d4:	61 1d       	adc	r22, r1
 4d6:	23 1f       	adc	r18, r19
 4d8:	84 9f       	mul	r24, r20
 4da:	60 0d       	add	r22, r0
 4dc:	21 1d       	adc	r18, r1
 4de:	82 2f       	mov	r24, r18
 4e0:	76 2f       	mov	r23, r22
 4e2:	6a 2f       	mov	r22, r26
 4e4:	11 24       	eor	r1, r1
 4e6:	9f 57       	subi	r25, 0x7F	; 127
 4e8:	50 40       	sbci	r21, 0x00	; 0
 4ea:	9a f0       	brmi	.+38     	; 0x512 <__mulsf3_pse+0x88>
 4ec:	f1 f0       	breq	.+60     	; 0x52a <__mulsf3_pse+0xa0>
 4ee:	88 23       	and	r24, r24
 4f0:	4a f0       	brmi	.+18     	; 0x504 <__mulsf3_pse+0x7a>
 4f2:	ee 0f       	add	r30, r30
 4f4:	ff 1f       	adc	r31, r31
 4f6:	bb 1f       	adc	r27, r27
 4f8:	66 1f       	adc	r22, r22
 4fa:	77 1f       	adc	r23, r23
 4fc:	88 1f       	adc	r24, r24
 4fe:	91 50       	subi	r25, 0x01	; 1
 500:	50 40       	sbci	r21, 0x00	; 0
 502:	a9 f7       	brne	.-22     	; 0x4ee <__mulsf3_pse+0x64>
 504:	9e 3f       	cpi	r25, 0xFE	; 254
 506:	51 05       	cpc	r21, r1
 508:	80 f0       	brcs	.+32     	; 0x52a <__mulsf3_pse+0xa0>
 50a:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_inf>
 50e:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_szero>
 512:	5f 3f       	cpi	r21, 0xFF	; 255
 514:	e4 f3       	brlt	.-8      	; 0x50e <__mulsf3_pse+0x84>
 516:	98 3e       	cpi	r25, 0xE8	; 232
 518:	d4 f3       	brlt	.-12     	; 0x50e <__mulsf3_pse+0x84>
 51a:	86 95       	lsr	r24
 51c:	77 95       	ror	r23
 51e:	67 95       	ror	r22
 520:	b7 95       	ror	r27
 522:	f7 95       	ror	r31
 524:	e7 95       	ror	r30
 526:	9f 5f       	subi	r25, 0xFF	; 255
 528:	c1 f7       	brne	.-16     	; 0x51a <__mulsf3_pse+0x90>
 52a:	fe 2b       	or	r31, r30
 52c:	88 0f       	add	r24, r24
 52e:	91 1d       	adc	r25, r1
 530:	96 95       	lsr	r25
 532:	87 95       	ror	r24
 534:	97 f9       	bld	r25, 7
 536:	08 95       	ret

00000538 <_exit>:
 538:	f8 94       	cli

0000053a <__stop_program>:
 53a:	ff cf       	rjmp	.-2      	; 0x53a <__stop_program>
>>>>>>> parent of a64aea3... split the files and implement 4 sensors model
